[16] 예외 처리

	1. 예외사항:
		정상적으로 프로그램이 동작하는 과정에서 나타나는 에러.
		ex: 정수를 0으로 나눈 경우, 배열 인덱스를 벗어나는 경우 등

	2. 예외 처리의 필요성
		프로그램이 다운되어 시스템 재기동 전까지 구동을 못한다면 손실이 크다. 사소한 문제를 우회해 계속 구동하도록 프로그래밍하는 방법이 필요.
	
	3. 예외처리 문법(try~catch)
			try {
				//try블럭 ; 익셉션이 발생할 가능성이 있는 명령문들(문제가 발생할 수 있는 로직을 기술)
			}catch(익셉션타입 익셉션변수) { 
				//그 익셉션을 처리하는 명령문(try블록안에서 문제가 발생했을 때 대처방안 기술);
			}catch(익셉션타입 익셉션변수) { 
				//Catch문에 에외처리를 여러 개 연달아 할 수 도 있다.
			}finally {
				//익셉션 발생 여부와 상관없이 맨 마지막에 실행할 명령문;
			}
		*자바는 예외를 객체로 취급하여, 예외가 발생하면 예외 객체를 자동으로 생성한다.
		*finally는 try와 catch문의 영향 없이 무조건 실행.

	4. 예외처리 문법(throws)
		*나를 호출한 쪽으로 예외를 다시 넘긴다.

	5. 예외의 종류
		1) ArrayIndexOutOfBoundsException > 배열을 사용시 존재하지 않는 index값을 호출하면 발생 합니다.
		2) NullPointerException > 존재하지 않는 객체를 가리킬 때 발생 합니다
		3) NumberFormatException > 숫자로 변경할 수 없는 문자열을 변경하려고 함.
	
	6. 강제로 예외 발생시키기(throw new Exception("에러메세지"))


