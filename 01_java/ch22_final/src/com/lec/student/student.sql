 --드랍
DROP TABLE STUDENT;
DROP TABLE MAJOR;
 --크리에이트
 CREATE TABLE MAJOR (
 mNO NUMBER(2) PRIMARY KEY,
 mNAME VARCHAR(50)
 );
 
 DROP SEQUENCE STUDENT_SEQ;
 CREATE SEQUENCE STUDENT_SEQ MAXVALUE 999 NOCACHE NOCYCLE;
 
 CREATE TABLE STUDENT(
 sNO VARCHAR(7) PRIMARY KEY,
 sNAME VARCHAR(50),
 mNO NUMBER(2) REFERENCES MAJOR(mNO),
 SCORE NUMBER (3) DEFAULT 0 CHECK(SCORE BETWEEN 0 AND 100),
 sEXPEL NUMBER(1) DEFAULT 0 CHECK(sEXPEL BETWEEN 0 AND 1)
 );


INSERT INTO MAJOR VALUES (1, '빅데이터학');
INSERT INTO MAJOR VALUES (2, '경영정보학');
INSERT INTO MAJOR VALUES (3, '컴퓨터공학');
INSERT INTO MAJOR VALUES (4, '소프트웨어');
INSERT INTO MAJOR VALUES (5, '인공지능학');	

SELECT * FROM MAJOR;
SELECT * FROM STUDENT;

--학번만들기 쿼리
SELECT TO_CHAR(SYSDATE, 'YYYY')||
    TRIM(TO_CHAR(STUDENT_SEQ.NEXTVAL,'000'))
    FROM DUAL;

-- 1번 학생 입력
INSERT INTO STUDENT (sNO, sNAME, mNO, SCORE) VALUES
    (TO_CHAR(SYSDATE, 'YYYY')
    ||TRIM(TO_CHAR(STUDENT_SEQ.NEXTVAL,'000')),
    '정우성',(SELECT mNO FROM MAJOR WHERE mNAME='빅데이터학'), 90) ;


INSERT INTO STUDENT VALUES(TO_CHAR(SYSDATE, 'YYYY')||
    TRIM(TO_CHAR(STUDENT_SEQ.NEXTVAL,'000')), '정우성', 1,90,0);
INSERT INTO STUDENT VALUES(STUDENT_SEQ.NEXTVAL, '박세영', 1,80,0);
INSERT INTO STUDENT VALUES(STUDENT_SEQ.NEXTVAL, '배수지', 3,20,0);
INSERT INTO STUDENT VALUES(STUDENT_SEQ.NEXTVAL, '홍길동', 4,95,0);
INSERT INTO STUDENT VALUES(STUDENT_SEQ.NEXTVAL, '송혜교', 5,100,0);
INSERT INTO STUDENT VALUES(STUDENT_SEQ.NEXTVAL, '홍철수', 4,20,1);


--2번 원하는 학과 이름 입력
SELECT mNO FROM MAJOR WHERE mNAME = '빅데이터학'; --서브쿼리

SELECT ROWNUM RANK, sNAME||'('||sNO||')' sNAME, mNAME, SCORE
    FROM (SELECT * FROM MAJOR M, STUDENT S 
            WHERE M.mNO=S.mNO AND mNAME = '빅데이터학')
    ORDER BY SCORE DESC;
    
    
--3번 제적당하지 않은 전체 학생, 점수 높은 순 출력
SELECT ROWNUM||'등', S.sNAME||'('||sNO||')', M.mNAME, S.SCORE FROM MAJOR M, STUDENT S 
    WHERE M.mNO=S.mNO AND sEXPEL!=1
    ORDER BY SCORE DESC; --으으 왜 안되지 TOP-N 체크하기
    
    SELECT ROWNUM RANK, sNAME||'('||sNO||')' sNAME, mNAME, SCORE
    FROM (SELECT * FROM STUDENT S , MAJOR M WHERE S.mNO= M.mNO AND sEXPEL=0
       ORDER BY SCORE DESC);
    
    
    
--4번 제적당한 학생을 조회. 점수 높은 순으로 출력
SELECT ROWNUM||'등', S.sNAME||'('||sNO||')', M.mNAME, S.SCORE 
    FROM MAJOR M, STUDENT S 
    WHERE M.mNO=S.mNO AND sEXPEL=1
    ORDER BY SCORE DESC;
    
SELECT ROWNUM RANK, S.sNAME||'('||sNO||')', M.mNAME, S.SCORE 
    FROM MAJOR M, STUDENT S 
    WHERE M.mNO=S.mNO AND sEXPEL=1
    ORDER BY SCORE DESC;
commit;
