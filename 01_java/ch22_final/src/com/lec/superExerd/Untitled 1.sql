    
    
    DROP TABLE CUSTOMER CASCADE CONSTRAINTS;
    DROP TABLE CUS_LEVEL;

--테이블 생성
CREATE TABLE CUS_LEVEL(
    LEVELNO NUMBER(1,0) DEFAULT 0 PRIMARY KEY ,
    LEVELNAME varchar2(20),
    LOW NUMBER(9,0),
    HIGH NUMBER(9,0)
    );  
    
CREATE TABLE CUSTOMER(
    CID nUMBER(6,0) PRIMARY KEY,
    CTEL VARCHAR2(20) NOT NULL,
    CNAME vARCHAR2(30) NOT NULL,
    CPOINT nUMBER(9,0) DEFAULT 1000,
    CAMOUNT NUMBER(9,0) DEFAULT 0,
    LEVELNO NUMBER(1,0) REFERENCES CUS_LEVEL
);

CREATE SEQUENCE CUSTOMER_SEQ NOCACHE NOCYCLE;
DROP SEQUENCE CUSTOMER_SEQ;

--더미데이터 INSERT
INSERT INTO CUS_LEVEL VALUES (1, 'NORMAL', 0, 999999);
INSERT INTO CUS_LEVEL VALUES (2, 'SILVER', 1000000, 1999999);
INSERT INTO CUS_LEVEL VALUES (3, 'GOLD', 2000000, 2999999);
INSERT INTO CUS_LEVEL VALUES (4, 'VIP', 3000000, 3999999);
INSERT INTO CUS_LEVEL VALUES (5, 'VVIP', 4000000, 4999999);

INSERT INTO CUSTOMER(cID, cTEL, cNAME) VALUES
    (CUSTOMER_SEQ.NEXTVAL, '010-9999-9999', '홍길동');
        
INSERT INTO CUSTOMER VALUES
    (CUSTOMER_SEQ.NEXTVAL, '010-8888-9999', '김길동',1000, 500000, 4);
INSERT INTO CUSTOMER VALUES
    (CUSTOMER_SEQ.NEXTVAL, '010-8888-1111', '최민재',1000, 0, 1);
INSERT INTO CUSTOMER VALUES
    (CUSTOMER_SEQ.NEXTVAL, '010-8888-2222', '독고훈',1000, 1000000, 2);  
INSERT INTO CUSTOMER VALUES
    (CUSTOMER_SEQ.NEXTVAL, '010-7777-3333', '김정길',1000, 101000, 2); 

COMMIT;

--0. LEVEL NAME;;(레벨이름들) PUBLIC VECTOR<STRING> LEVELNAMES(;
    SELECT LEVELNAME FROM CUS_LEVEL ORDER BY LEVELNO;
    
--1. 아이디 검색 PUBLIC ARRAYLIST<CustomerDto> cIdGetCustomers(String cId)
SELECT CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, 
    HIGH-CAMOUNT+1 as FORLEVELUP
    FROM CUSTOMER C, CUS_LEVEL L
    WHERE C.LEVELNO = L.LEVELNO AND cID = 1; --최고레벨인 고객도 나와버려서 수정
    
SELECT CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, 
    (SELECT HIGH-CAMOUNT+1 
        FROM CUSTOMER WHERE CID = C.CID AND LEVELNO!=5) AS FORLEVELUP
    FROM CUSTOMER C, CUS_LEVEL L
    WHERE C.LEVELNO = L.LEVELNO AND cID = 1; --자바에 쓸 SQL


--2. 폰 뒷 4자리 검색, FULL 검색 public ArrayList<CustomerDto> cTelGetCustomer(String ctel)
SELECT CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, 
    (SELECT HIGH-CAMOUNT+1 
        FROM CUSTOMER WHERE CID = C.CID AND LEVELNO!=5) AS FORLEVELUP
    FROM CUSTOMER C, CUS_LEVEL L
    WHERE C.LEVELNO = L.LEVELNO AND cTel Like '%'||'9999'; 
-- java에서 쓸 sql.

--3. 고객 이름으로 검색 public ArrayList<CustomerDto> cTelGetCustomers (String cName)
SELECT CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, 
    (SELECT HIGH-CAMOUNT+1 
        FROM CUSTOMER WHERE CID = C.CID AND LEVELNO!=5) AS FORLEVELUP
    FROM CUSTOMER C, CUS_LEVEL L
    WHERE C.LEVELNO = L.LEVELNO AND CNAME ='김정길'; -- java에서 쓸 sql

-- 4. 포인트로만 구매 public int butWithPoint(int cAmount)
UPDATE CUSTOMER SET CPOINT = CPOINT - 500 WHERE CID = 2;

-- 5. 물품 구매 (포인트 변경, 구매 누적금액도 변경, LEVELNO 변경
-- 5-1. 포인트와 구매누적금액 변경
UPDATE CUSTOMER SET CPOINT = CPOINT+1000000*0.05,
                                CAMOUNT = C.AMOUNT+1000000
                            WHERE CID = 11;
                                
-- 5-2 LEVELNO 변경
SELECT CAMOUNT, C. LEVELNO as 현재레벨, L.LEVELNO as 바뀌어야 할 레벨,LOW, HIGH
    FROM CUSTOMER C , CUS_LEVEL L
        WHERE CAMOUNT BETWEEN LOW AND HIGH;

SELECT L. LEVELNO 
    FROM CUSTOMER C , CUS_LEVEL L
    WHERE CAMOUNT BETWEEN LOW AND HIGH AND CID=3; --바뀌어야 할 레벨


--5-1, 5-2를 합쳐서 JAVA에 넣기.
--public int buy (int c, c , [
UPDATE CUSTOMER
SET LEVELNO = (SELECT L. LEVELNO 
    FROM CUSTOMER C , CUS_LEVEL L
    WHERE CAMOUNT +1000000 BETWEEN LOW AND HIGH AND CID=1) WHERE CID = 1;


--public int buy(int cAmount, int cId)
UPDATE CUSTOMER SET CPOINT = CPOINT + 1000000*0.05,
                    CAMOUNT = CAMOUNT + 1000000,
                    LEVELNO = (SELECT L.LEVELNO
                                FROM CUSTOMER C, CUS_LEVEL L
                                WHERE CAMOUNT+1000000 BETWEEN LOW AND HIGH AND CID=1)
                WHERE CID=1;
 

-- 6 등급별 출력
SELECT CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME,
    (SELECT HIGH - CAMOUNT+1
        FROM CUSTOMER WHERE CID = C.CID AND LEVELNO !=5) FORLEVELUP
        FROM CUSTOMER C, CUS_LEVEL L
            WHERE C.LEVELNO = L.LEVELNO AND LEVELNAME = 'VVIP'
            ORDER BY CAMOUNT DESC;

--7 전체 출력
SELECT CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME,
    (SELECT HIGH - CAMOUNT+1
        FROM CUSTOMER WHERE CID = C.CID AND LEVELNO !=5) FORLEVELUP
        FROM CUSTOMER C, CUS_LEVEL L
            WHERE C.LEVELNO = L.LEVELNO
            ORDER BY CAMOUNT DESC;
            
-- 8. 회원 가입
INSERT INTO CUSTOMER (CID, CTEL, CNAME) VALUES
    (CUSTOMER_SEQ.NEXTVAL, '010-7777-7777', '신길동');
SELECT * FROM CUSTOMER;

--9 회원정보수정(번호수정) public int updateCustomer(int cid, String ctel)
UPDATE CUSTOMER SET CTEL = '010-7777-7771' WHERE CID = 4;

-- 10. 회원탈퇴 public int deleteCustomer(int cid)
DELETE FROM CUSTOMER WHERE CID = 17;

SELECT * FROM CUSTOMER;
SELECT * FROM cus_level;
update cus_level set levelname = 'VVIP' where levelno=5;
commit;
